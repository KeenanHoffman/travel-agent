#!/bin/bash

set -e

source $GOPATH/src/github.com/compozed/travel-agent/bin/common.sh

conf_dir=~/.travel-agent

init(){
  NAME=$1

  local manifest_folder=$GOPATH/src/github.com/compozed/travel-agent/manifest

  if [  -z "$NAME" ]
  then
    log_error "You must provide a concourse target \n"
    echo ''
    echo 'USAGE: ./travel-agent init NAME'
    exit 1
  fi

  mkdir -p ci && cp -rn $manifest_folder ci/. 2>/dev/null || :
}



function upgrade-travel-agent(){
  local manifest_folder=$GOPATH/src/github.com/compozed/travel-agent/manifest
  mkdir -p ci && cp -rn $manifest_folder ci/. 2>/dev/null || :

  pushd ci/manifest > /dev/null
    cp $manifest_folder/manifest_test.go .
    cp $manifest_folder/manifest_suite_test.go .
    cp $manifest_folder/main.go .
  popd > /dev/null

}


fly_opts=""

while getopts ":v:" opt; do
  case "$opt" in
    v)
      fly_opts="$fly_opts -v \"$OPTARG\""
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

shift $((OPTIND-1))

if [[ $1 =~ ^(help|target|init|book)$ ]]; then
  case $1 in
    help)
      help
      ;;
    target)
      target $2
      ;;
    init)
      init $2
      ;;
    book)
      shift
      book $@
      ;;
  esac
else
  echo "Invalid subcommand $1" >&2
  exit 1
fi
